üê£ Please follow me for new updates https://twitter.com/camenduru <br />
üî• Please join our discord server https://discord.gg/k5BwmmvJJU

`lite` has a stable WebUI and stable installed extensions. <br />
`stable` has ControlNet, a stable WebUI, and stable installed extensions. <br />
`nightly` has ControlNet, the latest WebUI, and daily installed extension updates. <br />

** Stable Diffusion Web UI
[[https://github.com/AUTOMATIC1111/stable-diffusion-webui](https://github.com/AUTOMATIC1111/stable-diffusion-webui)

** Stable Diffusion Web UI Colab
[https://github.com/camenduru/stable-diffusion-webui-colab](https://github.com/camenduru/stable-diffusion-webui-colab)

** Documentation
[https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki).

** Installed Extensions
[https://github.com/deforum-art/deforum-for-automatic1111-webui](https://github.com/deforum-art/deforum-for-automatic1111-webui) <br />
[https://github.com/yfszzx/stable-diffusion-webui-images-browser](https://github.com/yfszzx/stable-diffusion-webui-images-browser) <br />
[https://github.com/camenduru/stable-diffusion-webui-huggingface](https://github.com/camenduru/stable-diffusion-webui-huggingface) <br />
[https://github.com/Vetchems/sd-civitai-browser](https://github.com/Vetchems/sd-civitai-browser) <br />
[https://github.com/kohya-ss/sd-webui-additional-networks](https://github.com/kohya-ss/sd-webui-additional-networks) <br />

** Installed Scripts
[https://github.com/camenduru/stable-diffusion-webui-scripts/blob/main/run_n_times.py](https://github.com/camenduru/stable-diffusion-webui-scripts/blob/main/run_n_times.py) <br />

** Models License
https://huggingface.co/spaces/CompVis/stable-diffusion-license

** üê≥ Base Docker
https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/11.7.1/ubuntu2204/devel/cudnn8/Dockerfile <br />
https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/11.7.1/ubuntu2204/base/Dockerfile

** Xformers
For the correct xformers wheel, please check https://github.com/camenduru/stable-diffusion-webui-colab/releases<br />
or build with the same VM `pip wheel git+https://github.com/facebookresearch/xformers#egg=xformers` <br />

** Install CUDA toolkit

Uninstall previous version
https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#removing-cuda-toolkit-and-driver

Download and install new
https://developer.nvidia.com/cuda-downloads

** Install nvidia-container-toolkit

#+begin_src shell
  # Add nvidia toolkit repo to apt get
  distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
      && curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
      && curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
  # update and install 
  sudo apt-get update

  # install nvidia-cotainer-toolkit
  sudo apt-get install -y nvidia-container-toolkit-base

  # check version 
  nvidia-ctk --version

  # Generate a CDI specification that refers to all devices
  sudo nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml

  # Check name of the created devices
  sudo grep "  name:" /etc/cdi/nvidia.yaml
#+end_src

Install Docker
#+begin_src shell
curl https://get.docker.com | sh \
  && sudo systemctl --now enable docker
#+end_src

Configure the Docker daemon to recognize the NVIDIA Container Runtime:
#+begin_src shell
sudo nvidia-ctk runtime configure --runtime=docker

# Restart Docker
sudo systemctl restart docker
#+end_src

If after all this process the following error appears:
#+begin_src shell
docker: Error response from daemon: could not select device driver "" with capabilities: [[gpu]].
#+end_src

Repeat this steps:
#+begin_src shell
sudo nvidia-ctk runtime configure --runtime=docker

# Restart Docker
sudo systemctl restart docker
#+end_src

